@using MediatR
@using ShopCRM.Application.UseCases.Location.Queries
@inject IMediator Mediator
@model ShopCRM.Domain.Entities.ViewModels.CreateSaleViewModel

@{
    var locations = await Mediator.Send(new GetAllLocationsQuery());
}

<h2 class="mb-3">Create Sale</h2>

<form asp-action="Create" method="post">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="SalesRepId" class="form-label"></label>
                <input asp-for="SalesRepId" class="form-control" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="LocationId" class="form-label"></label>
                <select asp-for="LocationId" class="form-select" asp-items="@(new SelectList(locations, "Id", "Address"))">
                    <option value="">Select Location</option>
                </select>
                <span asp-validation-for="LocationId" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div id="sale-items-container">
        @for (var i = 0; i < Model.SaleItems.Count; i++)
        {
            <div class="sale-item mb-3">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="SaleItems[i].ProductId" class="form-label">Product</label>
                            <input asp-for="SaleItems[i].ProductId" class="form-control" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="SaleItems[i].Quantity" class="form-label">Quantity</label>
                            <input asp-for="SaleItems[i].Quantity" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="mt-3">
        <button type="button" id="add-sale-item" class="btn btn-secondary">Add Sale Item</button>
    </div>

    @if (ViewData.ModelState[""]?.Errors.Count > 0)
    {
        <div class="mt-3">
            <div class="alert alert-danger">
                @ViewData.ModelState[""].Errors[0].ErrorMessage
            </div>
        </div>
    }

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Ok</button>
        <a asp-controller="Sale" asp-action="All" class="btn btn-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    <script>
        document.getElementById('add-sale-item').addEventListener('click', function () {
            var container = document.getElementById('sale-items-container');
            var index = container.children.length;

            var template = `
                        <div class="sale-item mb-3">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="SaleItems_${index}__ProductId">Product</label>
                                        <input name="SaleItems[${index}].ProductId" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="SaleItems_${index}__Quantity">Quantity</label>
                                        <input name="SaleItems[${index}].Quantity" class="form-control" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

            container.insertAdjacentHTML('beforeend', template);
        });
    </script>
}